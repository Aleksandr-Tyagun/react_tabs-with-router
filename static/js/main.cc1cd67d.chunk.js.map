{"version":3,"sources":["components/HomePage.tsx","components/Tab.tsx","components/Tabs.tsx","components/TabsPage.tsx","App.tsx","index.tsx"],"names":["Home","className","Tab","tabs","activeTabId","tabId","useParams","currentContent","find","tab","id","useEffect","content","Tabs","match","useRouteMatch","useState","currentTabId","setCurrentTabId","map","key","classNames","to","url","title","path","TabsPage","App","role","aria-label","activeClassName","exact","HomePage","ReactDOM","render","document","getElementById"],"mappings":"0PAgBeA,G,MAdF,WACX,OACE,6BAASC,UAAU,QACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,SAAd,kB,yBCkBKC,EAjBc,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAC5BC,EAAUC,cAAVD,MACFE,EAAiBJ,EAAKK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAMnD,OAJAM,qBAAU,WACRP,EAAYC,MAIZ,6BACE,mCACGE,QADH,IACGA,OADH,EACGA,EAAgBK,WC4CVC,EA/Ce,SAAC,GAAc,IAAZV,EAAW,EAAXA,KACzBW,EAAQC,cAD4B,EAEFC,mBAASb,EAAK,GAAGO,IAFf,mBAEnCO,EAFmC,KAErBC,EAFqB,KAQ1C,OACE,oCACE,6BAASjB,UAAU,QACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,SAAd,WAMN,yBAAKA,UAAU,kBACb,4BACGE,EAAKgB,KAAI,SAAAV,GAAG,OACX,wBACEW,IAAKX,EAAIC,GACTT,UAAWoB,IAAW,CAAC,YAAaJ,IAAiBR,EAAIC,MAEzD,kBAAC,IAAD,CAASU,IAAKX,EAAIC,GAAIY,GAAE,UAAKR,EAAMS,IAAX,YAAkBd,EAAIC,KAC3CD,EAAIe,aAMf,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAI,UAAKX,EAAMW,KAAX,YACT,kBAAC,EAAD,CACEtB,KAAMA,EACNC,YAlCQ,SAACM,GACnBQ,EAAgBR,WCLLgB,EARmB,SAAC,GAAc,IAAZvB,EAAW,EAAXA,KACnC,OACE,6BACE,kBAAC,EAAD,CAAMA,KAAMA,MCCZA,EAAO,CACX,CAAEO,GAAI,QAASc,MAAO,QAASZ,QAAS,eACxC,CAAEF,GAAI,QAASc,MAAO,QAASZ,QAAS,eACxC,CAAEF,GAAI,QAASc,MAAO,QAASZ,QAAS,gBA2C3Be,EAxCH,kBACV,kBAAC,IAAD,KACE,6BACE,yBAAK1B,UAAU,oBAAoB2B,KAAK,aAAaC,aAAW,mBAC9D,yBAAK5B,UAAU,eACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CACEA,UAAU,cACV6B,gBAAgB,YAChBR,GAAG,IACHS,OAAK,GAJP,QAQA,kBAAC,IAAD,CACE9B,UAAU,cACV6B,gBAAgB,YAChBR,GAAG,QACHS,OAAK,GAJP,YAYR,yBAAK9B,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwB,KAAK,SACV,kBAAC,EAAD,CAAUtB,KAAMA,KAElB,kBAAC,IAAD,CAAOsB,KAAK,KACV,kBAACO,EAAD,W,MC7CVC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.cc1cd67d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = () => {\n  return (\n    <section className=\"hero\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <h1 className=\"title\">\n            Home page\n          </h1>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Home;\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\ntype Props = {\n  tabs: Tab[];\n  activeTabId: (id: string) => void;\n};\n\nconst Tab: React.FC<Props> = ({ tabs, activeTabId }) => {\n  const { tabId } = useParams();\n  const currentContent = tabs.find(tab => tab.id === tabId);\n\n  useEffect(() => {\n    activeTabId(tabId);\n  });\n\n  return (\n    <div>\n      <h3>\n        {currentContent?.content}\n      </h3>\n    </div>\n  );\n};\n\nexport default Tab;\n","import React, { useState } from 'react';\n\nimport {\n  useRouteMatch,\n  NavLink,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport Tab from './Tab';\n\ntype Props = {\n  tabs: Tab[];\n};\n\nconst Tabs: React.FC<Props> = ({ tabs }) => {\n  const match = useRouteMatch();\n  const [currentTabId, setCurrentTabId] = useState(tabs[0].id);\n\n  const activeTabId = (id: string) => {\n    setCurrentTabId(id);\n  };\n\n  return (\n    <>\n      <section className=\"hero\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">\n              Tabs\n            </h1>\n          </div>\n        </div>\n      </section>\n      <div className=\"tabs is-medium\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={classNames({'is-active': currentTabId === tab.id })}\n            >\n              <NavLink key={tab.id} to={`${match.url}/${tab.id}`}>\n                {tab.title}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        <Switch>\n          <Route path={`${match.path}/:tabId`}>\n            <Tab\n              tabs={tabs}\n              activeTabId={activeTabId}\n            />\n          </Route>\n        </Switch>\n      </div>\n    </>\n  );\n};\n\nexport default Tabs;\n","import React from 'react';\n\nimport Tabs from './Tabs';\n\ntype Props = {\n  tabs: Tab[];\n};\n\nconst TabsPage: React.FC<Props> = ({ tabs }) => {\n  return (\n    <div>\n      <Tabs tabs={tabs} />\n    </div>\n  );\n};\n\nexport default TabsPage;\n","import React from 'react';\nimport {\n  HashRouter,\n  Switch,\n  Route,\n  NavLink,\n} from 'react-router-dom';\n\nimport './App.css';\nimport HomePage from './components/HomePage';\nimport TabsPage from './components/TabsPage';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst App = () => (\n  <HashRouter>\n    <div>\n      <nav className=\"navbar is-primary\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-menu\">\n          <div className=\"navbar-start\">\n            <NavLink\n              className=\"navbar-item\"\n              activeClassName=\"is-active\"\n              to=\"/\"\n              exact\n            >\n              Home\n            </NavLink>\n            <NavLink\n              className=\"navbar-item\"\n              activeClassName=\"is-active\"\n              to=\"/tabs\"\n              exact\n            >\n              Tabs\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n    </div>\n    <div className=\"container\">\n      <Switch>\n        <Route path=\"/tabs\">\n          <TabsPage tabs={tabs} />\n        </Route>\n        <Route path=\"/\">\n          <HomePage />\n        </Route>\n      </Switch>\n    </div>\n  </HashRouter>\n\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bulma/css/bulma.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}